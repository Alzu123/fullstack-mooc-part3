{"version":3,"sources":["Components/Filter.js","Components/InputForm.js","Components/Notification.js","Components/Numbers.js","services/persons.js","App.js","index.js"],"names":["Filter","onChange","value","InputForm","onSubmit","onNameChange","nameValue","onNumberChange","numberValue","type","Notification","message","isSuccess","notificationType","className","Numbers","persons","filter","removePerson","person","name","toLowerCase","includes","map","number","onClick","id","baseUrl","personsService","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notificationMessage","setNotificationMessage","notificationStatus","setNotificationStatus","setTemporaryNotification","time","setTimeout","useEffect","initialPersons","event","target","preventDefault","newPerson","personWithSameName","find","window","confirm","returnedPerson","catch","error","status","console","log","concat","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fb340c5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ onChange, value }) => {\r\n  return (\r\n    <div>\r\n      filter shown with: <input onChange={onChange} value={value}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst InputForm = ({ onSubmit, onNameChange, nameValue, onNumberChange, numberValue }) => {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input onChange={onNameChange} value={nameValue}/>\r\n      </div>\r\n      <div>\r\n        number: <input onChange={onNumberChange} value={numberValue}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default InputForm","import React from 'react'\r\n\r\nconst Notification = ({ message, isSuccess }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  const notificationType = isSuccess ? 'notification' : 'notification warning'\r\n\r\n  return (\r\n    <div className={notificationType}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Numbers = ({ persons, filter, removePerson }) => {\r\n  return (\r\n    <div>\r\n      {persons.filter(person => person.name.toLowerCase().includes(filter)).map(person => \r\n        <div key={person.id}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => removePerson(person.id)}>delete</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Numbers","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst personsService = { getAll, create, update, remove }\r\n\r\nexport default personsService","import React, { useState, useEffect } from 'react'\nimport Filter from './Components/Filter'\nimport InputForm from './Components/InputForm'\nimport Notification from './Components/Notification'\nimport Numbers from './Components/Numbers'\nimport personsService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ notificationStatus, setNotificationStatus ] = useState(null)\n\n  const setTemporaryNotification = (message, time, isSuccess) => {\n    setNotificationMessage(message)\n    setNotificationStatus(isSuccess)\n    setTimeout(() => {\n      setNotificationMessage(null)\n      setNotificationStatus(null)\n    }, time)\n  }\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n    \n    const personWithSameName = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n\n    if (personWithSameName) {\n      const updateConfirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n\n      if (updateConfirmed) {\n        personsService\n          .update(personWithSameName.id, newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id === personWithSameName.id ? returnedPerson : person))\n            setNewName('')\n            setNewNumber('')\n            setTemporaryNotification(`Updated the phone number of ${returnedPerson.name}`, 5000, true)\n          })\n          .catch(error => {\n            if (error.response.status === 400) {\n              console.log(error.response)\n              setTemporaryNotification(error.response.data.error, 5000, false)\n            } else {\n              setTemporaryNotification(`Information of ${newName} has already been removed from server`, 5000, false)\n            }\n          })\n        return\n      } else {\n        setNewName('')\n        setNewNumber('')\n        return\n      }\n    }\n\n    personsService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewNumber('')\n        setNewName('')\n        setTemporaryNotification(`Added ${returnedPerson.name}`, 5000, true)\n      })\n      .catch(error => {\n        if (error.response.status === 400) {\n          setTemporaryNotification(error.response.data.error, 5000, false)\n        } else {\n          setTemporaryNotification(`Could not add ${newPerson.name} to server`, 5000, false)\n        }\n      })\n  }\n\n  const handleNameChange = event => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n  }\n\n  const removePerson = id => {\n    const personToRemove = persons.find(person => person.id === id)\n    const removalConfirmed = window.confirm(`Delete ${personToRemove.name}?`)\n    if (removalConfirmed) {\n      personsService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n          setTemporaryNotification(`Removed ${personToRemove.name} from the phone book`, 5000, true)\n        })\n        .catch(error => {\n          setTemporaryNotification(`Failed to remove ${personToRemove.name} from the phone book`, 5000, false)\n        })\n    }\n\n    return\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} isSuccess={notificationStatus} />\n      <Filter onChange={handleFilterChange} value={filter} />\n\n      <h3>Add a new</h3>\n      <InputForm onSubmit={addPerson} onNameChange={handleNameChange} nameValue={newName} onNumberChange={handleNumberChange} numberValue={newNumber}/>\n\n      <h3>Numbers</h3>\n      <Numbers persons={persons} filter={filter} removePerson={removePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}